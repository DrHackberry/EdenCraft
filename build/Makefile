# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win32)
  App_config = debug_win32
  Argumentalization_config = debug_win32
  Core_config = debug_win32
  Graphic_config = debug_win32
  Internationalization_config = debug_win32
  Renderer_config = debug_win32
  Resources_config = debug_win32
  Tests_config = debug_win32
  Utility_config = debug_win32
  Window_config = debug_win32
endif
ifeq ($(config),debug_win64)
  App_config = debug_win64
  Argumentalization_config = debug_win64
  Core_config = debug_win64
  Graphic_config = debug_win64
  Internationalization_config = debug_win64
  Renderer_config = debug_win64
  Resources_config = debug_win64
  Tests_config = debug_win64
  Utility_config = debug_win64
  Window_config = debug_win64
endif
ifeq ($(config),debug_unix32)
  App_config = debug_unix32
  Argumentalization_config = debug_unix32
  Core_config = debug_unix32
  Graphic_config = debug_unix32
  Internationalization_config = debug_unix32
  Renderer_config = debug_unix32
  Resources_config = debug_unix32
  Tests_config = debug_unix32
  Utility_config = debug_unix32
  Window_config = debug_unix32
endif
ifeq ($(config),debug_unix64)
  App_config = debug_unix64
  Argumentalization_config = debug_unix64
  Core_config = debug_unix64
  Graphic_config = debug_unix64
  Internationalization_config = debug_unix64
  Renderer_config = debug_unix64
  Resources_config = debug_unix64
  Tests_config = debug_unix64
  Utility_config = debug_unix64
  Window_config = debug_unix64
endif
ifeq ($(config),debug_osx)
  App_config = debug_osx
  Argumentalization_config = debug_osx
  Core_config = debug_osx
  Graphic_config = debug_osx
  Internationalization_config = debug_osx
  Renderer_config = debug_osx
  Resources_config = debug_osx
  Tests_config = debug_osx
  Utility_config = debug_osx
  Window_config = debug_osx
endif
ifeq ($(config),release_win32)
  App_config = release_win32
  Argumentalization_config = release_win32
  Core_config = release_win32
  Graphic_config = release_win32
  Internationalization_config = release_win32
  Renderer_config = release_win32
  Resources_config = release_win32
  Tests_config = release_win32
  Utility_config = release_win32
  Window_config = release_win32
endif
ifeq ($(config),release_win64)
  App_config = release_win64
  Argumentalization_config = release_win64
  Core_config = release_win64
  Graphic_config = release_win64
  Internationalization_config = release_win64
  Renderer_config = release_win64
  Resources_config = release_win64
  Tests_config = release_win64
  Utility_config = release_win64
  Window_config = release_win64
endif
ifeq ($(config),release_unix32)
  App_config = release_unix32
  Argumentalization_config = release_unix32
  Core_config = release_unix32
  Graphic_config = release_unix32
  Internationalization_config = release_unix32
  Renderer_config = release_unix32
  Resources_config = release_unix32
  Tests_config = release_unix32
  Utility_config = release_unix32
  Window_config = release_unix32
endif
ifeq ($(config),release_unix64)
  App_config = release_unix64
  Argumentalization_config = release_unix64
  Core_config = release_unix64
  Graphic_config = release_unix64
  Internationalization_config = release_unix64
  Renderer_config = release_unix64
  Resources_config = release_unix64
  Tests_config = release_unix64
  Utility_config = release_unix64
  Window_config = release_unix64
endif
ifeq ($(config),release_osx)
  App_config = release_osx
  Argumentalization_config = release_osx
  Core_config = release_osx
  Graphic_config = release_osx
  Internationalization_config = release_osx
  Renderer_config = release_osx
  Resources_config = release_osx
  Tests_config = release_osx
  Utility_config = release_osx
  Window_config = release_osx
endif

PROJECTS := App Argumentalization Core Graphic Internationalization Renderer Resources Tests Utility Window

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

App: Utility Core Window Graphic Renderer
ifneq (,$(App_config))
	@echo "==== Building App ($(App_config)) ===="
	@${MAKE} --no-print-directory -C . -f App.make config=$(App_config)
endif

Argumentalization: Utility Core
ifneq (,$(Argumentalization_config))
	@echo "==== Building Argumentalization ($(Argumentalization_config)) ===="
	@${MAKE} --no-print-directory -C . -f Argumentalization.make config=$(Argumentalization_config)
endif

Core: Utility
ifneq (,$(Core_config))
	@echo "==== Building Core ($(Core_config)) ===="
	@${MAKE} --no-print-directory -C . -f Core.make config=$(Core_config)
endif

Graphic: Utility Core Window
ifneq (,$(Graphic_config))
	@echo "==== Building Graphic ($(Graphic_config)) ===="
	@${MAKE} --no-print-directory -C . -f Graphic.make config=$(Graphic_config)
endif

Internationalization: Utility
ifneq (,$(Internationalization_config))
	@echo "==== Building Internationalization ($(Internationalization_config)) ===="
	@${MAKE} --no-print-directory -C . -f Internationalization.make config=$(Internationalization_config)
endif

Renderer: Utility Core Window Graphic
ifneq (,$(Renderer_config))
	@echo "==== Building Renderer ($(Renderer_config)) ===="
	@${MAKE} --no-print-directory -C . -f Renderer.make config=$(Renderer_config)
endif

Resources: Utility Core
ifneq (,$(Resources_config))
	@echo "==== Building Resources ($(Resources_config)) ===="
	@${MAKE} --no-print-directory -C . -f Resources.make config=$(Resources_config)
endif

Tests: Utility Core Window Graphic Renderer
ifneq (,$(Tests_config))
	@echo "==== Building Tests ($(Tests_config)) ===="
	@${MAKE} --no-print-directory -C . -f Tests.make config=$(Tests_config)
endif

Utility:
ifneq (,$(Utility_config))
	@echo "==== Building Utility ($(Utility_config)) ===="
	@${MAKE} --no-print-directory -C . -f Utility.make config=$(Utility_config)
endif

Window: Utility Core
ifneq (,$(Window_config))
	@echo "==== Building Window ($(Window_config)) ===="
	@${MAKE} --no-print-directory -C . -f Window.make config=$(Window_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f App.make clean
	@${MAKE} --no-print-directory -C . -f Argumentalization.make clean
	@${MAKE} --no-print-directory -C . -f Core.make clean
	@${MAKE} --no-print-directory -C . -f Graphic.make clean
	@${MAKE} --no-print-directory -C . -f Internationalization.make clean
	@${MAKE} --no-print-directory -C . -f Renderer.make clean
	@${MAKE} --no-print-directory -C . -f Resources.make clean
	@${MAKE} --no-print-directory -C . -f Tests.make clean
	@${MAKE} --no-print-directory -C . -f Utility.make clean
	@${MAKE} --no-print-directory -C . -f Window.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win32"
	@echo "  debug_win64"
	@echo "  debug_unix32"
	@echo "  debug_unix64"
	@echo "  debug_osx"
	@echo "  release_win32"
	@echo "  release_win64"
	@echo "  release_unix32"
	@echo "  release_unix64"
	@echo "  release_osx"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   App"
	@echo "   Argumentalization"
	@echo "   Core"
	@echo "   Graphic"
	@echo "   Internationalization"
	@echo "   Renderer"
	@echo "   Resources"
	@echo "   Tests"
	@echo "   Utility"
	@echo "   Window"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"